
import express from "express";
import dotenv from "dotenv";
import { connectDB } from "./config/db.js";
import path from 'path';
import cors from 'cors';
import { log } from "console";
import mongoose from "mongoose";
import Song from "./models/songs.model.js";
import videoRoutes from "./routes/videos.js";
import signUploadRoutes from "./routes/sign-upload.js"
import { errorHandler } from "./middlewares/error.js";
import fileUpload from "express-fileupload";
dotenv.config();
const app  = express();
const PORT = process.env.PORT || 5000;
const __dirname = path.resolve();
// new one

// new one


app.use(cors());
app.use(express.json()); 

app.get("/api/songs", async (req, res) => {
  try {
    const songs = await Song.find();
    res.json(songs);
  } catch (error) {
    res.status(500).json({ message: "Error fetching songs", error });
  }
});

// API to add a new song
app.post("/api/songs", async (req, res) => {
  try {
    const { title, artist, url } = req.body;
    const newSong = new Song({ title, artist, url });
    await newSong.save();
    res.status(201).json(newSong);
  } catch (error) {
    res.status(500).json({ message: "Error adding song", error });
  }
});



app.use("/api/videos",videoRoutes)
app.use("api/sign-upload" , signUploadRoutes)
app.use(errorHandler)

app.listen(PORT , ()=>{
    console.log(process.env.MONGOURI);
    
    connectDB();
      console.log('server at' + PORT); 
  });